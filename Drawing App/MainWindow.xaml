<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Drawing_App"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf" x:Class="Drawing_App.MainWindow"
        mc:Ignorable="d"
     xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewmodel="clr-namespace:Drawing_App.VM"
        xmlns:model="clr-namespace:Drawing_App.Model"
        Title="MainWindow" Height="800" Width="1000">
    <Window.Resources>
        <LinearGradientBrush x:Key="HueBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#FFFF0000" Offset="0.0"/>
            <GradientStop Color="#FFFFFF00" Offset="0.17"/>
            <GradientStop Color="#FF00FF00" Offset="0.33"/>
            <GradientStop Color="#FF00FFFF" Offset="0.5"/>
            <GradientStop Color="#FF0000FF" Offset="0.67"/>
            <GradientStop Color="#FFFF00FF" Offset="0.83"/>
            <GradientStop Color="#FFFF0000" Offset="1.0"/>
        </LinearGradientBrush>

    </Window.Resources>
    <Window.DataContext>
        <viewmodel:MainWindowVM/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}" />
        <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}" />
        <KeyBinding Command="{Binding ZoomInCommand}" Key="A" Modifiers="Control" />

        <KeyBinding Command="{Binding ZoomOutCommand}" Key="B" Modifiers="Control" />

    </Window.InputBindings>
    <Grid Margin="0,0,0,-16" Background="#FFC77740">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="8*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Height="604">
            <!-- Layers Collection -->
            <ItemsControl ItemsSource="{Binding Layers}" Background="Transparent" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=StackPanel}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=StackPanel}}">
                <!-- Item Template for each Layer -->
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding VisualElement}"
                                  Opacity="{Binding Opacity}"
                                  VerticalAlignment="Top" HorizontalAlignment="Center">
                            <!-- RenderTransform for Zoom Level -->
                            <ContentPresenter.RenderTransform>
                                <ScaleTransform ScaleX="{Binding ZoomLevel}" ScaleY="{Binding ZoomLevel}" />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <!-- Grid to Stack Layers -->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>



        <!-- Side Panel for Tools and Color Picker -->
        <StackPanel HorizontalAlignment="Center"   Background="#FFE5BF95" Grid.Column="1" Margin="0,46,0,-4" Grid.RowSpan="2">
            <TextBlock Text="Brush Size" HorizontalAlignment="Center"/>
            <Slider Name="SizeBrush" Minimum="1" Maximum="100" Value="5" TickFrequency="1" IsSnapToTickEnabled="True" Margin="10" ValueChanged="SizeBrush_ValueChanged"/>

            <TextBlock Text="Hue" HorizontalAlignment="Center"/>
            <Slider Name="HueSlider" Minimum="0" Maximum="360" Value="180" TickFrequency="0.1" IsSnapToTickEnabled="True" Margin="10" Background="{StaticResource HueBackgroundBrush}" ValueChanged="HueSlider_ValueChanged"/>

            <TextBlock Text="Saturation" HorizontalAlignment="Center"/>
            <Slider Name="SaturationSlider" Minimum="0" Maximum="1" Value="1" TickFrequency="0.001" IsSnapToTickEnabled="True" Margin="10" ValueChanged="SaturationSlider_ValueChanged"/>

            <TextBlock Text="Brightness" HorizontalAlignment="Center"/>
            <Slider Name="BrightnessSlider" Minimum="0" Maximum="1" Value="1" TickFrequency="0.001" IsSnapToTickEnabled="True" Margin="10" ValueChanged="BrightnessSlider_ValueChanged"/>
            <TextBlock Text="Opacity" HorizontalAlignment="Center"/>
            <Slider Name="OpacitySlider" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay}" TickFrequency="0.01" IsSnapToTickEnabled="True" Margin="10"/>
            <Rectangle Name="ColorViews" Height="49" Stroke="Black" Width="84" Margin="10" Fill="{Binding RectangleFill}"/>
            <UniformGrid Rows="1" Margin="0,0,5,10" Height="20" Width="236">
                <Ellipse Name="one" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color1}"></Ellipse>
                <Ellipse Name="two" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color2}"></Ellipse>
                <Ellipse Name="three" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color3}"></Ellipse>
                <Ellipse Name="four" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color4}"></Ellipse>
                <Ellipse Name="five" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color5}"></Ellipse>
                <Ellipse Name="six" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color6}"></Ellipse>
                <Ellipse Name="seven" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color7}"></Ellipse>
                <Ellipse Name="eight" Height="15" Width="15" Margin="3,0,3,0" Fill="{Binding Color8}"></Ellipse>
            </UniformGrid>
            <Menu Height="36" Background="#FFE5C591" HorizontalAlignment="Center">

                <MenuItem Header="Brushes" FontSize="20"  Width="98">
                    <MenuItem Header="Pen" Command="{Binding PencilCommand}"/>
                    <MenuItem Header="Pencil" Command="{Binding PenCommand}"/>
                    <MenuItem Header="Marker" Command="{Binding MarkerCommand}"/>
                    <MenuItem Header="Mechanical Pencil" Command="{Binding MechanicalCommand}"/>
                    <MenuItem Header="Gouche" Command="{Binding GoucheCommand}"/>
                    <MenuItem Header="Eraser" Command="{Binding EraserCommand}"/>
                </MenuItem>
            </Menu>
            <ListBox Height="79" Width="227" ItemsSource="{Binding Layers}"  SelectedIndex="{Binding SelectedLayerIndex, Mode=TwoWay}" Background="#FFB37943">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <!-- Display the layer name -->
                            <TextBlock Text="{Binding Name}" FontWeight="Bold" Margin="5" />

                            <!-- RadioButton bound to the visibility of the layer -->
                            <CheckBox IsChecked="{Binding IsVisible, Mode=TwoWay}" Content="Visible" Margin="5" />
                            <CheckBox IsChecked="{Binding _isSelected, Mode=TwoWay}" Content="Selected" Margin="5">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding DataContext.LayerCheckedCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding }" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding DataContext.LayerUncheckedCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 10">
                <TextBox x:Name="LayerWidth" Width="50" Margin="10 0 10 0" Text="{Binding width, Mode=TwoWay }"></TextBox>
                <TextBox x:Name="LayerHeight" Width="50" Margin="10 0 10 0" Text="{Binding height, Mode=TwoWay }"></TextBox>


            </StackPanel>
            <Button Height="27" Width="95" Content="Update Canvas" Background="#FFD2DD50" Command="{Binding UpdateDimensionsCanvas}"></Button>
            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal" Margin="10">
                <Button Content="Previous" Command="{Binding PreviousPaletteCommand}" Width="72" Height="30" Background="#FFA26236" />
                <Button Content="Next" Command="{Binding NextPaletteCommand}" Width="75" Height="30" Margin="10,0,0,0" Background="#FFA26236" />
            </StackPanel>

            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal">
                <!-- Display the selected palette using ItemsControl -->
                <ItemsControl x:Name="Palette" ItemsSource="{Binding SelectedPalette}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!-- Bind Command directly to the SelectColorCommand inside CustomPallete -->
                            <Button Width="30" Height="30" Margin="5"
                        Command="{Binding PickedColor}"
                            >
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <!-- Bind the Ellipse's Fill to ColorBrush from CustomPallete -->
                                            <Ellipse Width="30" Height="30" Fill="{Binding ColorBrush}" Stroke="Black" StrokeThickness="1"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>





        </StackPanel>


        <StackPanel  Background="#FFE5C591" Margin="0,0,0,30" Grid.Row="0" Grid.ColumnSpan="2">
            <Menu HorizontalAlignment="Left" Height="44"  Background="#FFE5C591">

                <MenuItem Header="Layers" FontSize="14" Background="#FFE5C591" Height="39">
                    <MenuItem Header="Add Image" Command="{Binding AddImageLayerCommand}"></MenuItem>
                    <MenuItem Header="Add Blank Layer" Command="{Binding AddDrawingLayerCommand}"></MenuItem>
                    <MenuItem Header="Delete Layer" Command="{Binding RemoveLayerCommand}"></MenuItem>
                    <MenuItem Header="Add References" Command="{Binding ReferencesCommand}"></MenuItem>
                </MenuItem>
                <MenuItem Width="87" Header="Color Settings" >

                    <Ellipse Name="harmonious" Height="30" Width="30" Margin="3,0,3,0" Fill="{Binding Harmony}"></Ellipse>
                    <MenuItem Header="Pallette Generator" Command="{Binding PalletteGeneratorCommand}"/>
                </MenuItem>
                <MenuItem Header="Add Shapes">
                    <MenuItem Header="Circle" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Circle}"></MenuItem>
                    <MenuItem Header="Square" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Square}"></MenuItem>
                    <MenuItem Header="Heart" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Heart}"></MenuItem>
                    <MenuItem Header="Elipse" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Ellipse}"></MenuItem>
                    <MenuItem Header="Rectangle" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Rectangle}"></MenuItem>
                    <MenuItem Header="Line" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Line}"></MenuItem>
                    <MenuItem Header="Triangle" Command="{Binding ChangeShapeKind}" CommandParameter="{x:Static model:ShapeKind.Triangle}"></MenuItem>
                    <MenuItem Header="ShapeDetect" Command="{ Binding ShapeDetectCommand}" ></MenuItem>
                </MenuItem>
                <MenuItem Header="Filters">
                    <MenuItem Header="Histogram" Command="{Binding HistoCommand}"/>
                    <MenuItem Header="Super Zoom" Command="{Binding SuperZoomCommand}"/>
                    <MenuItem Header="Basic Operations">
                        <MenuItem Header="Grayscale" Command="{Binding GrayscaleCommand}"/>
                        <MenuItem Header="Negative" Command="{Binding NegativeFilterCommand}"/>

                    </MenuItem>
                    <MenuItem Header="Pointwise Operations">
                        <MenuItem Header="Spline Tool" Command="{Binding Spline}"/>
                        <MenuItem Header="Histogram Equalisation" Command="{Binding HistogramEqualisationCommand}"/>
                    </MenuItem>

                </MenuItem>
                <MenuItem Header="Save As">
                    <MenuItem Header="Photoshop file"></MenuItem>
                    <MenuItem Header="Image file"></MenuItem>
                </MenuItem>

            </Menu>
        </StackPanel>
    </Grid>
</Window>
